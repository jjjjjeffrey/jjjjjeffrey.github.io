<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Daqian</title>
    <link>http://daqian.gift/posts/</link>
    <description>Recent content in Posts on Daqian</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 18 May 2016 16:41:25 +0800</lastBuildDate>
    <atom:link href="http://daqian.gift/posts/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>解决在Ubuntu上配置swift出现GLIBCXX_3.4.20 not found问题</title>
      <link>http://daqian.gift/posts/GLIBCXX_3.4.20-not-found-when-use-swift-on-ubuntu/</link>
      <pubDate>Wed, 18 May 2016 16:41:25 +0800</pubDate>
      
      <guid>http://daqian.gift/posts/GLIBCXX_3.4.20-not-found-when-use-swift-on-ubuntu/</guid>
      <description>&lt;p&gt;在Linux上配置Swift环境在这里就不多说了，参见&lt;a href=&#34;https://swift.org/getting-started/#installing-swift&#34;&gt;Installing Swift&lt;/a&gt;，配置好以后发现如下问题：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ swift --version
swift: /usr/lib/x86_64-linux-gnu/libstdc++.so.6: version `GLIBCXX_3.4.20&#39; not found (required by swift)
swift: /usr/lib/x86_64-linux-gnu/libstdc++.so.6: version `GLIBCXX_3.4.21&#39; not found (required by swift)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我们运行以下命令发现，找不到GLIBCXX_3.4.20和GLIBCXX_3.4.21，产生这个问题的原因是GCC版本低，需要更新：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ strings /usr/lib/x86_64-linux-gnu/libstdc++.so.6 | grep GLIBCXX
GLIBCXX_3.4
GLIBCXX_3.4.1
GLIBCXX_3.4.2
GLIBCXX_3.4.3
GLIBCXX_3.4.4
GLIBCXX_3.4.5
GLIBCXX_3.4.6
GLIBCXX_3.4.7
GLIBCXX_3.4.8
GLIBCXX_3.4.9
GLIBCXX_3.4.10
GLIBCXX_3.4.11
GLIBCXX_3.4.12
GLIBCXX_3.4.13
GLIBCXX_3.4.14
GLIBCXX_3.4.15
GLIBCXX_3.4.16
GLIBCXX_3.4.17
GLIBCXX_3.4.18
GLIBCXX_3.4.19
GLIBCXX_DEBUG_MESSAGE_LENGTH
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接下来我们来解决这个问题：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wget http://ftp.de.debian.org/debian/pool/main/g/gcc-5/libstdc++6-5-dbg_5.3.1-19_amd64.deb
$ ar -x libstdc++6-5-dbg_5.3.1-19_amd64.deb
$ tar xvf data.tar.xz
$ sudo cp usr/lib/x86_64-linux-gnu/debug/libstdc++.so.6.0.21 /usr/lib/x86_64-linux-gnu/
$ cd /usr/lib/x86_64-linux-gnu/
$ sudo rm libstdc++.so.6
$ sudo ln libstdc++.so.6.0.21 libstdc++.so.6
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我们再次来运行这个命令来看一下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ strings /usr/lib/x86_64-linux-gnu/libstdc++.so.6 | grep GLIBCXX
GLIBCXX_3.4
GLIBCXX_3.4.1
GLIBCXX_3.4.2
GLIBCXX_3.4.3
GLIBCXX_3.4.4
GLIBCXX_3.4.5
GLIBCXX_3.4.6
GLIBCXX_3.4.7
GLIBCXX_3.4.8
GLIBCXX_3.4.9
GLIBCXX_3.4.10
GLIBCXX_3.4.11
GLIBCXX_3.4.12
GLIBCXX_3.4.13
GLIBCXX_3.4.14
GLIBCXX_3.4.15
GLIBCXX_3.4.16
GLIBCXX_3.4.17
GLIBCXX_3.4.18
GLIBCXX_3.4.19
GLIBCXX_3.4.20
GLIBCXX_3.4.21
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这时GLIBCXX_3.4.20和GLIBCXX_3.4.21就出现了，ok，完美的解决了这个问题。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>怎样使用Hugo和Github创建个人博客(Mac OS)</title>
      <link>http://daqian.gift/posts/how-to-create-blog-on-github-with-hugo/</link>
      <pubDate>Tue, 17 May 2016 14:24:57 +0800</pubDate>
      
      <guid>http://daqian.gift/posts/how-to-create-blog-on-github-with-hugo/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;使得我们更容易的生成一套可部署在&lt;a href=&#34;https://github.com/&#34;&gt;Github&lt;/a&gt;上的博客系统，其简单易用的特点广受欢迎，其提供的大量主题模板可以让你的个人博客彰显个性和品位。&lt;/p&gt;

&lt;h3 id=&#34;本地测试:dcfdd40d4e1b9b734f430a240e358717&#34;&gt;本地测试&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;安装&lt;a href=&#34;http://brew.sh/&#34;&gt;Brew&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;$ /usr/bin/ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;安装&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;$ brew install hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;生成&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;博客目录&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new site blog
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此时生成了一个名字为blog的目录，目录结构如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;├── archetypes
├── content
├── data
├── layouts
├── static
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;下载一个主题&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir themes
$ cd themes
$ git clone https://github.com/spf13/hyde.git
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;创建一篇博客文章&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new post/HelloWorld.md
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;本地测试博客&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;$ hugo server --theme=hyde
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;浏览器打开&lt;a href=&#34;http://localhost:1313&#34;&gt;http://localhost:1313&lt;/a&gt;，一个全新的博客页面展示出来。&lt;/p&gt;

&lt;h3 id=&#34;部署到github:dcfdd40d4e1b9b734f430a240e358717&#34;&gt;部署到Github&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;注册&lt;a href=&#34;https://github.com/&#34;&gt;Github&lt;/a&gt;账号
新建一个仓库并命名为&lt;code&gt;username.github.io&lt;/code&gt;，username为你的Github用户名。&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;$ cd blog
$ hugo --theme=hyde --baseUrl=&amp;quot;http://username.github.io&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;顺利的话，blog目录下会生成了一个public文件夹，这个文件夹包含了Hugo为你生成的静态页面。目录结构大概是下面这个样子：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zengdaqiandeMacBook-Pro:Blog zengdaqian$ tree public/
public/
├── 404.html
├── CNAME
├── apple-touch-icon-144-precomposed.png
├── css
│   ├── hyde.css
│   ├── poole.css
│   └── syntax.css
├── favicon.png
├── index.html
├── index.xml
├── posts
│   ├── HelloWorld
│   │   └── index.html
│   ├── index.html
│   └── index.xml
└── sitemap.xml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接下来我们把public文件夹的内容上传到你刚刚生成的仓库中：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd public
$ git init
$ git remote add origin https://github.com/username/username.github.io.git
$ git add -A
$ git commit -m &amp;quot;first commit&amp;quot;
$ git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;大功告成，让我们在浏览器中试一下&lt;code&gt;http://username.github.io&lt;/code&gt;（username改成你的Github用户名）&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>